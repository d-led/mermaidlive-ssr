name: CI
on:
  push:
    branches: [main]
    paths:
      - 'lib/**'
      - 'test/**'
      - 'mix.exs'
      - 'mix.lock'
      - '.github/workflows/ci.yml'
      - 'scripts/**'
      - 'examples/**'
  pull_request:
    branches: [main]
    paths:
      - 'lib/**'
      - 'test/**'
      - 'mix.exs'
      - 'mix.lock'
      - '.github/workflows/ci.yml'
      - 'scripts/**'
      - 'examples/**'

jobs:
  test:
    name: Test (Elixir ${{ matrix.elixir }} / OTP ${{ matrix.otp }})
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      pull-requests: write

    strategy:
      matrix:
        elixir: ['1.14', '1.19']
        otp: ['26', '27']
        exclude:
          - elixir: '1.14'
            otp: '26'

    env:
      MIX_ENV: test
      CI: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            mermaidlive_ssr/deps
            mermaidlive_ssr/_build
          key: ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-

      - name: Install dependencies
        run: cd mermaidlive_ssr && mix deps.get

      - name: Compile
        run: cd mermaidlive_ssr && mix compile --warnings-as-errors

      - name: Run tests
        run: |
          cd mermaidlive_ssr && mix test \
            --formatter JUnitFormatter \
            --formatter ExUnit.CLIFormatter \
            --slowest 10

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.elixir }}-${{ matrix.otp }}
          path: mermaidlive_ssr/_build/test/lib/mermaidlive_ssr/test-junit-report.xml

      - name: Publish test report
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: 'mermaidlive_ssr/_build/test/lib/mermaidlive_ssr/test-junit-report.xml'
          check_name: 'Test Report (Elixir ${{ matrix.elixir }} / OTP ${{ matrix.otp }})'
          detailed_summary: true
          include_passed: true

  coverage:
    name: Combined Code Coverage (All Tests)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.18'
          otp-version: '27'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            mermaidlive_ssr/deps
            mermaidlive_ssr/_build
          key: ${{ runner.os }}-mix-coverage-${{ hashFiles('**/mix.lock') }}

      - name: Install dependencies
        run: cd mermaidlive_ssr && mix deps.get

      - name: Run tests with coverage
        env:
          MIX_ENV: test
        run: cd mermaidlive_ssr && mix coveralls --export-coverage all

      - name: Run coverage report
        env:
          MIX_ENV: test
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd mermaidlive_ssr && mix test.coverage
          cd mermaidlive_ssr && mix coveralls.github --import-cover cover

  quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.18'
          otp-version: '27'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            mermaidlive_ssr/deps
            mermaidlive_ssr/_build
          key: ${{ runner.os }}-mix-quality-${{ hashFiles('**/mix.lock') }}

      - name: Cache Dialyzer PLTs
        uses: actions/cache@v4
        with:
          path: mermaidlive_ssr/priv/plts
          key: ${{ runner.os }}-dialyzer-1.18-27-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-dialyzer-1.18-27-

      - name: Install dependencies
        run: cd mermaidlive_ssr && mix deps.get

      - name: Check formatting
        run: cd mermaidlive_ssr && mix format --check-formatted

      - name: Run Credo
        run: cd mermaidlive_ssr && mix credo --strict
        continue-on-error: true

      - name: Run Dialyzer
        run: cd mermaidlive_ssr && mix dialyzer --format github
